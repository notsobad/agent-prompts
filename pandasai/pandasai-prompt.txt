<tables>

<table dialect="duckdb" table_name="table_3196ce98cf3ce3223735e1d61022e9d2" columns="[{"name": "country", "type": "string", "description": null, "expression": null, "alias": null}, {"name": "revenue", "type": "integer", "description": null, "expression": null, "alias": null}]" dimensions="10x2">
country,revenue
United States,5000
United Kingdom,3200
France,2900
Germany,4100
Italy,2300
</table>


</tables>

You are already provided with the following functions that you can call:
<function>
def execute_sql_query(sql_query: str) -> pd.Dataframe
    """This method connects to the database, executes the sql query and returns the dataframe"""
</function>


Update this initial code:
```python
# TODO: import the required dependencies
import pandas as pd

# Write code here

# Declare result var: 
type (possible values "string", "number", "dataframe", "plot"). Examples: { "type": "string", "value": f"The highest salary is {highest_salary}." } or { "type": "number", "value": 125 } or { "type": "dataframe", "value": pd.DataFrame({...}) } or { "type": "plot", "value": "temp_chart.png" }

```



### QUERY
 Which are the top 5 countries by sales?

At the end, declare "result" variable as a dictionary of type and value.


Generate python code and return full updated code:

### Note: Use only relevant table for query and do aggregation, sorting, joins and grouby through sql query